library(tidyverse)
help(rename)
iris <- as_tibble(iris) # so it prints a little nicer
rename(iris, petal_length = Petal.Length)
install.packages('r2jags')
install.packages('R2jags')
library(R2jags)
library(R2jags)
library(devtools)
source_URL("https://github.com/aj-grant/mr_horse.R")
library(httr)
library(devtools)
source_URL("https://github.com/aj-grant/mr_horse.R")
library(devtools)
source("https://github.com/aj-grant/mr_horse.R")
source('https://github.com/aj-grant/mrhorse/raw/refs/heads/main/mr_horse.R')
data_ex = read.csv('clipboard')
data_ex
data_ex = read.csv('clipboard')
head(data_ex)
set.seed(20230531)
MVMREx = mvmr_horse(data_mv_ex)
MVMREx = mvmr_horse(data_ex)
MVMRex
MVMREx
MVMREx$MR_Estimate
help(bind_rows)
a = data.frame(b = NULL, c = NULL, d = NULL)
a = data.frame(b = c(), c = c(), d = c())
a = data.frame(b = c(1), c = c(2), d = c(3))
a[,c('b','c')]
help(subset)
names(MVMREx)
MVMREx$MR_Coda
summary(MVMREx$MR_Coda[[3]])
test = summary(MVMREx$MR_Coda[[3]])
test
test$statistics
test = summary(MVMREx$MR_Coda)
test$statistics
test = summarise(MVMREx$MR_Coda)
library(tidyverse)
test = summarise(MVMREx$MR_Coda)
test$quantiles
help(insert)
strsplit(c('abc','cba'),'b')
help(strsplit)
test = strsplit(c('abc','cba'),'b')
unlist(test)
test[1]
test[2]
test = strsplit(c('abe','cbd'),'b')
test[1]
bind_rows(test)
rbind(test)
cbind(test)
cbind(test)[1]
help(separate_wider_delim)
help(|>)
|>
MR_Coda['mcmc']
MRMVEx$MR_Coda['mcmc']
MVMREx$MR_Coda['mcmc']
MVMREx$MR_Coda[[1]]$mcmc
MVMREx$MR_Coda[[1]]
bind_rows(MVMREx$MR_Coda)
MVMREx$MR_Coda
MVMREx$MR_Coda[[1]]
MVMREx$MR_Coda[[1]][[1]]
MVMREx$MR_Coda[[1]]
rowMeans(MVMREx$MR_Coda[[1]])
colMeans(MVMREx$MR_Coda[[1]])
colMeans(MVMREx$MR_Coda[[1]][,-1])
colMeans((MVMREx$MR_Coda[[1]][,-1]>0)
)
colMeans((MVMREx$MR_Coda[[1]][,-1]>0.1))
colMeans((MVMREx$MR_Coda[[1]][,-1]>0))
colMeans((MVMREx$MR_Coda[[2]][,-1]>0))
colMeans((MVMREx$MR_Coda[[3]][,-1]>0))
rbind(MVMREx$MR_Coda)
unlist(MVMREx$MR_Coda)
test = unlist(MVMREx$MR_Coda)
MVMREx$MR_Coda[[1]]
MVMREx$MR_Coda[[1]] %>% as_tibble()
MVMREx$MR_Coda %>% as_tibble()
MVMREx$MR_Coda %>% lappply(as_tibble) %>% bind_rows()
MVMREx$MR_Coda %>% lapply(as_tibble) %>% bind_rows()
View(mvmr_horse)
res_mrhorse = MVMREx
p1tail = res_mrhorse$MR_Coda %>% lapply(as_tibble) %>% bind_rows()
p1tail = colMeans(p1tail[,-1]>0)
p1tail
p1tail[p1tail > 0.5] = 1 - p1tail[p1tail>0.5]
p1tail
test = data.frame(a = c(1,2))
test$p = p1tail
test
res_mrhorse$MR_Estimate
# Install devtools if not already installed
# install.packages("devtools")
devtools::install_github("lapsumchan/MVMR-cML-SuSiE")
remotes::install_github("MRCIEU/TwoSampleMR")
devtools::install_github("xue-hr/MRcML")
devtools::install_github("ZhaotongL/MVMR-cML")
library(MVMRcMLSuSiE)
sample.sizes <- example.dat$step1$sample.sizes
sample.sizes <- c(sample.sizes, 487511)
beta.exposure.ls <- example.dat$step1$beta.exposure.ls
se.exposure.ls <- example.dat$step1$se.exposure.ls
beta.outcome.ls <- example.dat$step1$beta.outcome.ls
se.outcome.ls <- example.dat$step1$se.outcome.ls
beta.exposure.ls
step1.res <- mvmr.cml.susie.step1(sample.sizes = sample.sizes, beta.exposure.ls = beta.exposure.ls, se.exposure.ls = se.exposure.ls, beta.outcome.ls = beta.outcome.ls, se.outcome.ls = se.outcome.ls, use.openGWAS = FALSE)
library(MVMRcMLSuSiE)
library(TwoSampleMR)
library(MRcML)
library(MVMRcML)
step1.res <- mvmr.cml.susie.step1(sample.sizes = sample.sizes, beta.exposure.ls = beta.exposure.ls, se.exposure.ls = se.exposure.ls, beta.outcome.ls = beta.outcome.ls, se.outcome.ls = se.outcome.ls, use.openGWAS = FALSE)
length(data_ex)
ss = sample.sizes[1:3]
bex = beta.exposure.ls[[1:2]]
bex = beta.exposure.ls[[1]]
bex = beta.exposure.ls[:2]
bex = beta.exposure.ls[1:2]
seex = se.exposure.ls[1:2]
bout = beta.outcome.ls[1:2]
seout = beta.outcome.ls[1,2]
seout = se.outcome.ls[1:2]
step1.res <- mvmr.cml.susie.step1(sample.sizes = ss, beta.exposure.ls = bex, se.exposure.ls = seex, beta.outcome.ls = bout, se.outcome.ls = seout, use.openGWAS = FALSE)
step1.res
subset.idx = which(step1.res < 1)
sample.sizes.subset <- sample.sizes[subset.idx]
sample.sizes.subset <- c(sample.sizes.subset, 487511)
beta.exposure.mat <- example.dat$step2$beta.exposure.mat
se.exposure.mat <- example.dat$step2$se.exposure.mat
beta.outcome.vec <- example.dat$step2$beta.outcome.mat
se.outcome.vec <- example.dat$step2$se.outcome.mat
pval.exposure.mat <- example.dat$step2$pval.exposure.mat
beta.exposure.mat
sample.sizes.subset = sample.sizes(1:44)
sample.sizes.subset = sample.sizes[1:44]
step2.res <- mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec, se.outcome.vec = se.outcome.vec, pval.exposure.mat = pval.exposure.mat, use.openGWAS = FALSE)
beta.exposure.mat <- example.dat$step2$beta.exposure.mat
se.exposure.mat <- example.dat$step2$se.exposure.mat
beta.outcome.vec <- example.dat$step2$beta.outcome.mat
se.outcome.vec <- example.dat$step2$se.outcome.mat
pval.exposure.mat <- example.dat$step2$pval.exposure.mat
step2.res <- mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec, se.outcome.vec = se.outcome.vec, pval.exposure.mat = pval.exposure.mat, use.openGWAS = FALSE)
step2.res <- mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec, se.outcome.vec = se.outcome.vec, pval.exposure.mat = pval.exposure.mat, use.openGWAS = FALSE)
sample.sizes.subset = sample.sizes(1:43)
sample.sizes.subset = sample.sizes[1:43]
step2.res <- mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec, se.outcome.vec = se.outcome.vec, pval.exposure.mat = pval.exposure.mat, use.openGWAS = FALSE)
sample.sizes.subset = sample.sizes[1:44]
step2.res = mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec)
step2.res = mvmr.cml.susie.step2(sample.sizes.subset = sample.sizes.subset, beta.exposure.mat = beta.exposure.mat, se.exposure.mat = se.exposure.mat, beta.outcome.vec = beta.outcome.vec, se.outcome.vec = se.outcome.vec, pval.exposure.mat = pval.exposure.mat, use.openGWAS = F)
13*376
4888^2
4888^2/2
library(MVMRcMLSuSiE)
library(MVMRcML)
library(tidyverse)
install.packages(c("broom", "commonmark", "curl", "doBy", "fs", "gert", "ggnewscale", "ggplot2", "GPArotation", "httr2", "ieugwasr", "jpeg", "jsonlite", "knitr", "later", "lme4", "locuszoomr", "magick", "MatrixModels", "mime", "nloptr", "pillar", "pkgbuild", "posterior", "processx", "ps", "psych", "quantreg", "R.utils", "ragg", "raster", "RcppArmadillo", "RCurl", "Rdpack", "readxl", "rgl", "rlang", "RNifti", "sass", "sessioninfo", "sf", "sp", "stars", "stringi", "systemfonts", "terra", "tzdb", "units", "V8", "xfun", "xml2", "zip", "zoo"))
library(matrixStats)
a = c(!<"<Â£)")
a = c(1,3,4)
c(a,2)
1 != 2
library(tidyverse)
